version: '2.2'

services:

  database:
    image: postgres:9-alpine
#    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: MenUVYe7TJDcqOUEbZ2PZ1K5RP8FfMBP
    healthcheck:
      test: "pg_isready -U kong && psql -d kong -U kong -c \"SELECT 1=1\""
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 5432:5432
    network_mode: bridge

  kong-migrate:
    image: kong:2.1.4-alpine
    depends_on:
      database:
        condition: service_healthy
    links:
    - database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: MenUVYe7TJDcqOUEbZ2PZ1K5RP8FfMBP
    command: kong migrations up
    network_mode: bridge

  kong:
    image: kong:2.1.4-alpine
#    container_name: kong
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "kong health"
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: MenUVYe7TJDcqOUEbZ2PZ1K5RP8FfMBP
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
#      KONG_ADMIN_LISTEN_SSL: "0.0.0.0:8444"
      VIRTUAL_PORT: 8000
    ports:
    - 8000
    - 8001
    links:
    - database
    network_mode: bridge

  konga:
    image: pantsel/konga:0.14.9
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_ADAPTER: postgres
      DB_HOST: database
      DB_DATABASE: konga
      DB_USER: kong
      DB_PASSWORD: MenUVYe7TJDcqOUEbZ2PZ1K5RP8FfMBP
      HTTPS_METHOD: noredirect
#      NODE_ENV: dev
      NODE_ENV: production
    ports:
    - 1337
    links:
    - kong
    - database
    network_mode: bridge
