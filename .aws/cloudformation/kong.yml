AWSTemplateFormatVersion: '2010-09-09'
Description: "Manages an the infrastructure and applications for the Kong API Gateway and associated Administration UI"

Parameters:
  LatestAmiId:
    Description:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ecs/optimized-ami/amazon-linux/recommended"
  SelectedVPC:
    Description: "The VPC in which to install Kong"
    Type: "AWS::EC2::VPC::Id"
  KeyPair:
    Description: "The KeyPair to associate with EC2 instances"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: "Must be the name of an existing EC2 KeyPair."
  KongDatabaseName: # TODO: Provide Validations
    Type: "String"
    Default: "kong"
  KongaDatabaseName: # TODO: Provide Validations
    Type: "String"
    Default: "konga"
  DatabaseName: # TODO: Provide Validations
    Type: "String"
    Default: "kong"
  DatabasePassword:
    Type: "String"
    NoEcho: true
    MinLength: "16"
    MaxLength: "32"
    ConstraintDescription: "Must be a String between 16 and 32 characters long."
  DatabaseSnapshotName:
    Type: "String"
    Default: ""

Conditions:
  UseDatabaseSnapshot: !Not [ !Equals [ !Ref DatabaseSnapshotName, "" ] ]

Resources:

  ###########################################################
  #                                                         #
  #   S3 BUCKETS                                            #
  #                                                         #
  ###########################################################

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties: {}


  ###########################################################
  #                                                         #
  #   SECURITY GROUPS                                       #
  #                                                         #
  ###########################################################

  KongALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "Kong ALB"
      GroupDescription: !Sub "Security Group for Kong Load Balancer (${SelectedVPC})"
      VpcId: !Ref SelectedVPC

  KongSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "Kong ECS"
      GroupDescription: !Sub "Security Group for Kong ECS (${SelectedVPC})"
      VpcId: !Ref SelectedVPC
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref KongALBSecurityGroup
        Description: "Insecure Proxy Port Exposure for ALB Ingress"
        IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000

  KongaSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "Konga ECS"
      GroupDescription: !Sub "Security Group for Kongs ECS (${SelectedVPC})"
      VpcId: !Ref SelectedVPC
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref KongALBSecurityGroup
        Description: "Konga Port Exposure for ALB Ingress"
        IpProtocol: tcp
        FromPort: 1337
        ToPort: 1337

  KongDatabaseSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "Kong RDS"
      GroupDescription: !Sub "Security Group for Kong RDS (${SelectedVPC})"
      VpcId: !Ref SelectedVPC
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref KongSecurityGroup
        Description: "Ingress from Kong Proxy ECS"
        IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
      - SourceSecurityGroupId: !Ref KongaSecurityGroup
        Description: "Ingress from Konga/Admin ECS"
        IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432

  ###########################################################
  #                                                         #
  #   SSL CERTIFICATES                                      #
  #                                                         #
  ###########################################################

  KongaSSLCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: kong.console.bonkers.tech

  ###########################################################
  #                                                         #
  #   RDS DATABASES                                         #
  #                                                         #
  ###########################################################

  KongDatabase:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: "20 GB"
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: "2 Days"
      DBInstanceClass: "db.t2.micro"
      DBName: !Ref KongDatabaseName
      DBSnapshotIdentifier:
        Fn::If:
        - UseDatabaseSnapshot
        - !Ref DatabaseSnapshotName
        - !Ref AWS::NoValue
      DeletionPolicy: "Snapshot"
      Engine: "postgres"
      EngineVersion: "9.6.6"
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      PubliclyAccessible: true
      # For Read replicas in the future! See docs for more info
      # SourceDBInstanceIdentifier: String
      VPCSecurityGroups:
        - !ImportValue PersonalPostgresIngress
        - !ImportValue KongDatabaseSecurityGroup

  ###########################################################
  #                                                         #
  #   ECS CLUSTERS                                          #
  #                                                         #
  ###########################################################

  KongECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: Kong

  KongECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: Konga

  ###########################################################
  #                                                         #
  #   EC2 INSTANCES (ECS)                                   #
  #                                                         #
  ###########################################################

  ###########################################################
  #                                                         #
  #   ECS TASK DEFINITIONS                                  #
  #                                                         #
  ###########################################################
  KongTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: "kong"
      ContainerDefinitions:
        - Cpu: 1024
          Environment:
          - Name: "KONG_DATABASE"
            Value: "postgres"
          - Name: "KONG_PG_HOST"
            Value: !GetAtt KongDatabase.Endpoint.Address
          - Name: "KONG_PG_DATABASE"
            Value: !Ref KongDatabaseName
          - Name: "KONG_PG_USER"
            Value: !Ref DatabaseUser
          - Name: "KONG_PG_PASSWORD"
            Value: !Ref DatabasePassword
          - Name: "KONG_PROXY_ACCESS_LOG"
            Value: "/dev/stdout"
          - Name: "KONG_PROXY_ERROR_LOG"
            Value: "/dev/stderr"
          Image: "kong:latest"
          Memory: 768
          Name: "kong"
          PortMappings:
          - ContainerPort: 8000
            HostPort: 8000
            Protocol: "tcp"

  KongaTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: "konga"
      ContainerDefinitions:
        - Cpu: 512
          Environment:
          - Name: "DB_ADAPTER"
            Value: "postgres"
          - Name: "DB_HOST"
            Value: !GetAtt KongDatabase.Endpoint.Address
          - Name: "DB_DATABASE"
            Value: !Ref KongaDatabaseName
          - Name: "DB_USER"
            Value: !Ref DatabaseUser
          - Name: "DB_PASSWORD"
            Value: !Ref DatabasePassword
          - Name: "NODE_ENV"
            Value: "production"
          Image: "pantsel/konga:latest"
          Links:
          - "kongadmin:kongadmin"
          Memory: 768
          Name: "konga"
          PortMappings:
          - ContainerPort: 1337
            HostPort: 1337
            Protocol: "tcp"
        - Cpu: 512
          Environment:
          - Name: "KONG_DATABASE"
            Value: "postgres"
          - Name: "KONG_PG_HOST"
            Value: !GetAtt KongDatabase.Endpoint.Address
          - Name: "KONG_PG_DATABASE"
            Value: !Ref KongDatabaseName
          - Name: "KONG_PG_USER"
            Value: !Ref DatabaseUser
          - Name: "KONG_PG_PASSWORD"
            Value: !Ref DatabasePassword
          - Name: "KONG_ADMIN_ACCESS_LOG"
            Value: "/dev/stdout"
          - Name: "KONG_ADMIN_ERROR_LOG"
            Value: "/dev/stderr"
          - Name: "KONG_ADMIN_LISTEN"
            Value: "0.0.0.0:8001"
          Image: "kong:latest"
          Memory: 128
          Name: "kongadmin"
          PortMappings:
          - ContainerPort: 8001
            HostPort: 8001
            Protocol: "tcp"

  ###########################################################
  #                                                         #
  #   ECS SERVICE DEFINITIONS                               #
  #                                                         #
  ###########################################################

  KongService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: "kong"
      ServiceName: "kong"
      TaskDefinition: "kong"
      DesiredCount: 1
      LoadBalancers:
      - ContainerName: "kong"
        ContainerPort: 8000
        TargetGroupArn: !Ref KongALBTargetGroup
      # DeploymentConfiguration:
        # MaximumPercent: Integer
        # MinimumHealthyPercent: Integer

  KongaService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: "konga"
      ServiceName: "konga"
      TaskDefinition: "konga"
      DesiredCount: 1
      LoadBalancers:
      - ContainerName: "konga"
        ContainerPort: 1337
        TargetGroupArn: !Ref KongaALBTargetGroup
      # DeploymentConfiguration:
        # MaximumPercent: Integer
        # MinimumHealthyPercent: Integer

  ###########################################################
  #                                                         #
  #   ELB v2 TARGET GROUPS                                  #
  #                                                         #
  ###########################################################

  KongALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Join [ "-", [ "Kong", !Ref AWS::Region ] ]
      Port: 8000
      Protocol: "http"
      HealthCheckProtocol: "http"
      HealthCheckPort: "traffic-port"
      HealthCheckPath: "/"
      Matcher: 404
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 300
      - Key: stickiness.enabled
        Value: false
      TargetType: "instance"
      VpcId: !Ref SelectedVPC

  KongaALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Join [ "-", [ "Konga", !Ref AWS::Region ] ]
      Port: 1337
      Protocol: "http"
      HealthCheckProtocol: "http"
      HealthCheckPort: "traffic-port"
      HealthCheckPath: "/"
      Matcher: 200
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 300
      - Key: stickiness.enabled
        Value: false
      TargetType: "instance"
      VpcId: !Ref SelectedVPC

  ###########################################################
  #                                                         #
  #   ELB v2 APPLICATION LOAD BALANCERS                     #
  #                                                         #
  ###########################################################


Outputs:
  KongALBSecurityGroup:
    Description: SG to be assigned to the Kong ALB
    Value: !Ref KongALBSecurityGroup
    Export:
      Name: KongALBSecurityGroup
  KongSecurityGroup:
    Description: SG to be assigned to the Kong ECS Instances
    Value: !Ref KongSecurityGroup
    Export:
      Name: KongSecurityGroup
  KongaSecurityGroup:
    Description: SG to be assigned to the Konga/Admin ECS Instances
    Value: !Ref KongaSecurityGroup
    Export:
      Name: KongaSecurityGroup
  KongDatabaseSecurityGroup:
    Description: SG to be assigned to the Kong RDS cluster
    Value: !Ref KongDatabaseSecurityGroup
    Export:
      Name: KongDatabaseSecurityGroup
